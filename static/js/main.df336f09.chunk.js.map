{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","requiredPages","Math","ceil","pageList","Array","from","length","_","i","firstPage","lastPage","previousPage","nextPage","className","href","onClick","map","page","items","to","numbers","n","push","getNumbers","App","useState","setCurrentPage","setPerPage","startIndex","endIndex","currentItems","slice","id","defaultValue","onChange","event","Number","target","value","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"4KASaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAWC,MAAMC,KAAK,CAAEC,OAAQN,IAAiB,SAACO,EAAGC,GAAJ,OAAUA,EAAI,KAE/DC,EAAYN,EAAS,GACrBO,EAAWP,EAASA,EAASG,OAAS,GACtCK,EAAeb,EAAc,EAC7Bc,EAAWd,EAAc,EAE/B,OACE,qBAAIe,UAAU,aAAd,UACE,oBACEA,UACEf,IAAgBK,EAAS,GACrB,qBACA,YAJR,SAOE,mBACE,UAAQ,WACRU,UAAU,YACVC,KAAK,QACL,gBAAehB,IAAgBW,EAC/BM,QAAS,WACHjB,IAAgBW,GAIpBV,EAAaY,IAVjB,oBAgBDR,EAASa,KAAI,SAAAC,GAAI,OAChB,oBACEJ,UACEI,IAASnB,EACL,mBACA,YAJR,SAQE,mBACE,UAAQ,WACRe,UAAU,YACVC,KAAK,KACLC,QAAS,kBAAMhB,EAAakB,IAJ9B,SAMGA,KAREA,MAYT,oBACEJ,UACEf,IAAgBY,EACZ,qBACA,YAJR,SAOE,mBACE,UAAQ,WACRG,UAAU,YACVC,KAAK,QACL,gBAAehB,IAAgBY,EAC/BK,QAAS,WACHjB,IAAgBY,GAIpBX,EAAaa,IAVjB,wBCpER,IAAMM,ECNC,SAAoBb,EAAcc,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIhB,EAAMgB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBP,KAAI,SAAAK,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAO3B,EAAP,KAAoB4B,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAO5B,EAAP,KAAgB8B,EAAhB,KACA,EAAgBF,mBAAS,IAAlB7B,EAAP,oBAEMgC,GAAc9B,EAAc,GAAKD,EACjCgC,EAAWD,EAAa/B,EACxBiC,EAAeZ,EAAMa,MAAMH,EAAYC,GAE7C,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWf,EADX,mBACiC8B,EAAa,EAD9C,cACqDC,EAAWjC,EAAQA,EAAQiC,EADhF,eAC+FjC,EAD/F,OAIA,sBAAKiB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,aAAcpC,EACdqC,SAAU,SAACC,GACTR,EAAWS,OAAOD,EAAME,OAAOC,QAC/BZ,EAAe,IAPnB,UAUE,wBAAQY,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEjB,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAAAkB,GAAI,OAAIS,EAAeT,MAGvC,6BACGa,EAAad,KAAI,SAAAwB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YExDlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.df336f09.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const requiredPages = Math.ceil(total / perPage);\n  const pageList = Array.from({ length: requiredPages }, (_, i) => i + 1);\n\n  const firstPage = pageList[0];\n  const lastPage = pageList[pageList.length - 1];\n  const previousPage = currentPage - 1;\n  const nextPage = currentPage + 1;\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={\n          currentPage === pageList[0]\n            ? 'page-item disabled'\n            : 'page-item'\n        }\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === firstPage}\n          onClick={() => {\n            if (currentPage === firstPage) {\n              return;\n            }\n\n            onPageChange(previousPage);\n          }}\n        >\n          «\n        </a>\n      </li>\n      {pageList.map(page => (\n        <li\n          className={\n            page === currentPage\n              ? 'page-item active'\n              : 'page-item'\n          }\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href=\"#1\"\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li\n        className={\n          currentPage === lastPage\n            ? 'page-item disabled'\n            : 'page-item'\n        }\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === lastPage}\n          onClick={() => {\n            if (currentPage === lastPage) {\n              return;\n            }\n\n            onPageChange(nextPage);\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n  const [total] = useState(42);\n\n  const startIndex = (currentPage - 1) * perPage;\n  const endIndex = startIndex + perPage;\n  const currentItems = items.slice(startIndex, endIndex);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex + 1} - ${endIndex > total ? total : endIndex} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={perPage}\n            onChange={(event) => {\n              setPerPage(Number(event.target.value));\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={page => setCurrentPage(page)}\n      />\n\n      <ul>\n        {currentItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}